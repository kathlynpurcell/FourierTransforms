# -*- coding: utf-8 -*-
"""
Created on Sat Apr  4 20:44:14 2020

@author: kpurc
"""

import matplotlib.pyplot as plt
import numpy as np
import scipy.signal

x = np.arange(0,10,0.01)
xd = 100
xdd = np.arange(0,10,0.1)
fr = 1
Ssin = np.fft.fft(np.sin(2*np.pi*x*fr))
Scos = np.fft.fft(np.cos(2*np.pi*x*fr))
Ssqu = np.fft.fft(np.sign(np.sin(2*np.pi*x)))
Stri = np.fft.fft(np.abs(scipy.signal.sawtooth(2*np.pi*x)))
Sdel = np.fft.fft(scipy.signal.unit_impulse(xd, 'mid'))

Sisin = np.fft.ifft(Ssin)
Sicos = np.fft.ifft(Scos)
Sisqu = np.fft.ifft(Ssqu)
Sitri = np.fft.ifft(Stri)
Sidel = np.fft.ifft(Sdel)

freq = np.fft.fftfreq(x.shape[-1])
freqd = np.fft.fftfreq(xdd.shape[-1])

'''
t = np.arange(400)
n = np.zeros((400,), dtype=complex)
n[40:60] = np.exp(1j*np.random.uniform(0, 2*np.pi, (20,)))
s = np.fft.ifft(n)
plt.plot(t, s.real, 'b-', t, s.imag, 'r--')

plt.legend(('real', 'imaginary'))

plt.show()
'''



fig1=plt.figure(1)
plt.plot(freq, Ssin.real, 'b-', freq, Ssin.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Fourier Transform of sin")
#plt.ylim(-0.0000000000001,0.0000000000001)
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fs.png")
plt.show()
         
fig2=plt.figure(2)
plt.plot(freq, Sisin.real, 'b-', freq, Sisin.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Inverse Fourier Transform of sin")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fis.png")
plt.show()

fig3=plt.figure(3)
plt.plot(freq, Scos.real, 'b-', freq, Scos.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Fourier Transform of cos")
#plt.ylim(-0.0000000000001,0.0000000000001)
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fc.png")
plt.show()
         
fig4=plt.figure(4)
plt.plot(freq, Sicos.real, 'b-', freq, Sicos.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Inverse Fourier Transform of cos")
plt.xlabel("Frequency")
plt.ylabel("Amplitude")
plt.savefig("fic.png")
plt.show()

fig5=plt.figure(5)
plt.plot(freq, Ssqu.real, 'b-', freq, Ssqu.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Fourier Transform of square wave")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fsq.png")
plt.show()
         
fig6=plt.figure(6)
plt.plot(freq, Sisqu.real, 'b-', freq, Sisqu.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Inverse Fourier Transform of square wave")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fisq.png")
plt.show()

fig7=plt.figure(7)
plt.plot(freq, Stri.real, 'b-', freq, Stri.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Fourier Transform of triangle wave")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("ft.png")
plt.show()
         
fig8=plt.figure(8)
plt.plot(freq, Sitri.real, 'b-', freq, Sitri.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Inverse Fourier Transform of triangle wave")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fit.png")
plt.show()

fig9=plt.figure(9)
plt.plot(freqd, Sdel.real, 'b-', freqd, Sdel.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Fourier Transform of delta wave")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fd.png")
plt.show()
         
fig10=plt.figure(10)
plt.plot(freqd, Sidel.real, 'b-', freqd, Sidel.imag, 'r--') 
plt.legend(('real', 'imaginary'))
plt.title("Inverse Fourier Transform of delta wave")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.savefig("fid.png")
plt.show()


fig11=plt.figure(11)
plt.plot(x,np.sin(2*np.pi*x*fr))
plt.title("Sin Function")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.savefig("s.png")
plt.show()
fig12=plt.figure(12)
plt.plot(x,np.cos(2*np.pi*x*fr))
plt.title("Cos Function")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.savefig("c.png")
plt.show()
fig13=plt.figure(13)
plt.plot(x,np.sign(np.sin(2*np.pi*x)))
plt.title("Square wave")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.savefig("sq.png")
plt.show()
fig14=plt.figure(14)
plt.plot(x,np.abs(scipy.signal.sawtooth(2*np.pi*x)))
plt.title("Triangle wave")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.savefig("t.png")
plt.show()
fig15=plt.figure(15)
plt.plot(xdd,scipy.signal.unit_impulse(xd, 'mid'))
plt.title("Delta Function")
plt.xlabel("Time (s)")
plt.ylabel("Amplitude")
plt.savefig("d.png")
plt.show()

fs = 100
fss, P = scipy.signal.periodogram(np.sin(2*np.pi*x*fr),fs)
fc, Pc = scipy.signal.periodogram(np.cos(2*np.pi*x*fr),fs)
fsq, Psq = scipy.signal.periodogram(np.sign(np.sin(2*np.pi*x)),fs)
ft, Pt = scipy.signal.periodogram(np.abs(scipy.signal.sawtooth(2*np.pi*x)),fs)
fd, Pd = scipy.signal.periodogram(scipy.signal.unit_impulse(xd),fs)
fig16=plt.figure(16)
plt.semilogy(fss, P)
#plt.ylim([1e-7, 1e2])
plt.xlabel('frequency [Hz]')
plt.ylabel('PSD [V**2/Hz]')
plt.title("Power Spectral Density for Sin wave")
plt.savefig("ps.png")
plt.show()
fig17=plt.figure(17)
plt.semilogy(fc, Pc)
#plt.ylim([1e-7, 1e2])
plt.xlabel('frequency [Hz]')
plt.ylabel('PSD [V**2/Hz]')
plt.title("Power Spectral Density for Cos wave")
plt.savefig("pc.png")
plt.show()
fig18=plt.figure(18)
plt.semilogy(fsq, Psq)
#plt.ylim([1e-7, 1e2])
plt.xlabel('frequency [Hz]')
plt.ylabel('PSD [V**2/Hz]')
plt.title("Power Spectral Density for Square wave")
plt.savefig("psq.png")
plt.show()
fig19=plt.figure(19)
plt.semilogy(ft, Pt)
#plt.ylim([1e-7, 1e2])
plt.xlabel('frequency [Hz]')
plt.ylabel('PSD [V**2/Hz]')
plt.title("Power Spectral Density for Triangle wave")
plt.savefig("pt.png")
plt.show()
fig20=plt.figure(20)
plt.semilogy(fd, Pd)
#plt.ylim([1e-7, 1e2])
plt.xlabel('frequency [Hz]')
plt.ylabel('PSD [V**2/Hz]')
plt.title("Power Spectral Density for Delta wave")
plt.savefig("pd.png")
plt.show()
